<UserControl x:Class="ROV_Interface.Views.SettingsViews.SettingsPanelMainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ROV_Interface.Views.SettingsViews"
             xmlns:properties="clr-namespace:ROV_Interface.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="380" d:DesignWidth="201" >
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <Style x:Key="PlainButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF474646"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF474646"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF474646"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF474646"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF474646"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="CheckBoxDark" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF474646"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF474646"/>
        <Style x:Key="TextBoxStyleDark" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        
        
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="67"/>
            <ColumnDefinition Width="67"/>
            <ColumnDefinition Width="67"/>


        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="5"/>
          
            <RowDefinition Height="5"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Rectangle Fill="DimGray" Opacity="0.9" Grid.RowSpan="22"  Grid.ColumnSpan="5" RadiusX="5" RadiusY="5" />

        <TextBlock Text="Settings" FontSize="24" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="1" />

        <Rectangle Fill="#FF474646" Grid.Row="1" Grid.ColumnSpan="3" RadiusX="5" RadiusY="5"/>
        <TextBlock Text="General" FontSize="14" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1"  />
        <Button Style="{DynamicResource PlainButtonStyle}" Command="{Binding SettingsSubView1Command}"  Background="Transparent" FontSize="14" Content="ROV" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Width="67"  Height="25" BorderBrush="Transparent" Foreground="White"/>
        <Button Style="{DynamicResource PlainButtonStyle}" Command="{Binding SettingsSubView2Command}"  Background="Transparent" FontSize="14" Content="PID" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="1" Width="67"  Height="25" BorderBrush="Transparent" Foreground="White"/>
        <Rectangle Fill="White" Grid.Row="1" Height="2" Width="60 " VerticalAlignment="Bottom"/>

        <TextBlock Text="Show settings on startup" FontSize="11" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Margin="10,0,0,0"/>
        <CheckBox Style="{DynamicResource CheckBoxDark}" x:Name="SettingsStartupCheckBox" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ShowSettingsOnStartUp, Mode=TwoWay}"/>

        <TextBlock Text="Show telemerty on startup" FontSize="11" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="4" Margin="10,0,0,0" />
        <CheckBox Style="{DynamicResource CheckBoxDark}" x:Name="TelemertyStartupCheckBox" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Center" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ShowTelemertyOnStartUp, Mode=TwoWay}"/>

        <Rectangle Fill="White" Grid.Row="5" Height="2" Width="180 " Grid.ColumnSpan="3"/>
        
        <TextBlock Text="Vechicle IP" FontSize="11" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="7" Margin="10,0,0,0" />
        <TextBox Style="{DynamicResource TextBoxStyleDark}" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" Background="White" Margin="0,3,11,3" VerticalAlignment="Center" HorizontalAlignment="Right" Width="90" TextAlignment="Center" Text="{Binding IP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#FF474646"/>

        <TextBlock Text="TCP Sever Port" FontSize="11" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="8" Margin="10,0,0,0" />
        <TextBox Style="{DynamicResource TextBoxStyleDark}" Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="2" Background="White" Margin="0,3,11,3" VerticalAlignment="Center" HorizontalAlignment="Right" Width="90" TextAlignment="Center" Text="{Binding Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#FF474646"/>

        <TextBlock Text="Stream Port" FontSize="11" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="9" Margin="10,0,0,0" />
        <TextBox Style="{DynamicResource TextBoxStyleDark}" Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="2" Background="White" Margin="0,3,11,3" VerticalAlignment="Center" HorizontalAlignment="Right" Width="90" TextAlignment="Center" Text="{Binding StreamPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#FF474646"/>

        
        <Rectangle Fill="White" Grid.Row="10" Height="2" Width="180 " Grid.ColumnSpan="3"/>

        <TextBlock Text="Cell Alert Voltage" FontSize="11" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="12" Margin="10,0,0,0" />
        <TextBox Style="{DynamicResource TextBoxStyleDark}" Grid.Row="12" Grid.Column="1" Grid.ColumnSpan="2" Background="White" Margin="0,3,11,3" VerticalAlignment="Center" HorizontalAlignment="Right" Width="90" TextAlignment="Center" Text="{Binding AlertVoltage, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Foreground="#FF474646"/>
        <Rectangle Fill="#FF474646" Grid.Column="0" Grid.Row="21" Grid.ColumnSpan="3" RadiusX="5" RadiusY="5"/>
        <Button Style="{DynamicResource PlainButtonStyle}" Command="{Binding RefreshCommand}"  Background="Transparent" FontSize="14" Content="Refresh" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="21" Grid.ColumnSpan="2" Width="67"  Height="25" BorderBrush="Transparent" Foreground="White"/>
        <Button Style="{DynamicResource PlainButtonStyle}" Command="{Binding SaveCommand}"  Background="Transparent" FontSize="14" Content="Save" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="21" Grid.ColumnSpan="2"  Width="67"  Height="25" BorderBrush="Transparent" Foreground="White"/>


    </Grid>
</UserControl>
